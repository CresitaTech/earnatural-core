$(document).ready(function () {
	//var totalAmount = parseFloat(getParameterByName('unitPrice')*getParameterByName('quantity')).toFixed( 2 );

	
	const makeButtonDisabled = function(){
		console.log('Button making disabled')
		$('#buttonAddress').prop('disabled', true);
		$('#buttonAddress').css('background-color', '#6c757d');
	}
	const makeButtonEnabled = function(){
		console.log('Button making enabled')
		$('#buttonAddress').prop('disabled', false);
		$('#buttonAddress').css('background-color', '#9E005D');
	}

	var unitPrice = getParameterByName('unitPrice');
	var quantity = getParameterByName('quantity');
	var promocode = getParameterByName('promocode');

	console.log(promocode)
		if(promocode != 'null'){

			axios.get('/api/promocodes/'+promocode)
			.then(function (response) {
				var res = JSON.parse(JSON.stringify(response.data));

				if(res.data.promocode_type == 'Percentage') {
						console.log(res.data.promocode_discount)
						console.log(res.data.promocode_discount / 100) 
						console.log(Math.round(unitPrice * res.data.promocode_discount / 100))
						console.log(parseFloat(quantity * Math.round(unitPrice * res.data.promocode_discount / 100)))
						$('#total_amount_display').html('Discounted Price : $' + (unitPrice * quantity - parseFloat(quantity * Math.round((unitPrice * res.data.promocode_discount / 100)))).toFixed(2));
						//$('#total_amount_display').html('$' + (res.data.unit_price * quantity).toFixed(2)); 
					} else { 
						$('#total_amount_display').html('Discounted Price : $' + (unitPrice * quantity - Math.round(parseFloat(res.data.promocode_discount))).toFixed(2));
						//$('#total_amount_display').html('$' + (res.data.unit_price * quantity ).toFixed(2));
					}
				

			})
			.catch(function (error) {
				if (error.response) { // get response with a status code not in range 2xx
					console.log(error.response.data);
				} else if (error.request) { // no response
					console.log(error.request);
				} else { // Something wrong in setting up the request
					console.log('Error', error.message);
				}
			});
			
		}else{
			document.getElementById('total_amount_display').innerHTML = 'Non-Discounted Price : $' + (unitPrice * quantity).toFixed(2);
		}
		
	$("#unitPrice").val(getParameterByName('unitPrice'));
	$("#quantity").val(getParameterByName('quantity'));
	
	makeButtonDisabled();
	
	var mastercard = $("#mastercard");
	var visa = $("#visa");
	var discover = $("#discover");
	var amex = $("#amex");

	var cleaveDate = new Cleave('#inputExpDate', {
		date: true,
		datePattern: ['m', 'y'],
		onValueChanged: function (e) {
        // e.target = { value: '5100-1234', rawValue: '51001234' }
		console.log(e.target.value)
		console.log(e.target.rawValue)
		var currentMon = new Date().getMonth().toString()
		var currentYear = new Date().getFullYear().toString().substr(-2)
		if(currentMon < 10){
			currentMon = '0'+currentMon;
		}
		console.log('current month: ' + currentMon)
		console.log('currentYear: ' + currentYear)
	
		console.log('length: '+ e.target.value.length)
		/*if(e.target.value.length==3 && e.target.rawValue < currentMon ){
			$('#inputExpDate').val(currentMon+"/");
		}*/
		
		
    }
	});
	
	console.log(cleaveDate);
	$('#inputExpDate').on('blur', function(e) {
		console.log('blur method called')
        var monYr = $('#inputExpDate').val().split("/");
		var currentMon = new Date().getMonth().toString()
		var currentYear = new Date().getFullYear().toString().substr(-2)
		if(currentMon < 10){
			currentMon = '0'+currentMon;
		}
		
		var selectedMonth = monYr[0];
		var selectedYear = monYr[1];
		if(selectedYear < 10){
			selectedYear = '0'+selectedYear;
		}
		console.log('selectedYear: ' + selectedYear)

		/*if(selectedYear != "" && selectedYear < currentYear ){
			$('#inputExpDate').val(selectedMonth + "/" + currentYear);
		}
		if(monYr == 0 || monYr == 1){
			$('#inputExpDate').val("");
		}
		if(selectedMonth < currentMon && selectedYear <= currentYear ){
			$('#inputExpDate').val(currentMon+"/"+selectedYear);
		}*/
		document.getElementById("errorAmericanCard").style.display = 'none';
		if (selectedMonth < currentMon && selectedYear <= currentYear  ) {
			document.getElementById("errorAmericanCard").style.display = 'block';
			document.getElementById("errorAmericanCard").innerHTML = 'Enter month not valid. Please enter valid month in Expire Date.';
		}
		if (selectedYear < currentYear ) {
			document.getElementById("errorAmericanCard").style.display = 'block';
			document.getElementById("errorAmericanCard").innerHTML = 'Enter year not valid. Please enter valid year in Expire Date.';
		}
			
		
		
    });  
	


	var cleaveCC = new Cleave('#cardNumber', {
		creditCard: true,
		delimiter: '-',
		onCreditCardTypeChanged: function (type) {
			// update UI ...
			console.log(type)
			$.fn.clearCardIcon();
			if (type == 'mastercard' || type == 'visa' || type == 'discover' ) {
				$(`#${type}`).removeClass('transparent');
				console.log('Card type ' + type + ' found')
			}else if (type == 'amex' ) {
				document.getElementById("errorAmericanCard").style.display = 'block';
				document.getElementById("errorAmericanCard").innerHTML = 'We do not accept American Express, please enter any visa, dicover and master card number.';
			}else{
				document.getElementById("errorAmericanCard").style.display = 'block';
				document.getElementById("errorAmericanCard").innerHTML = 'We accpet master, visa and dicover card only.';
			}

			makeButtonEnabled();
		}
	});

	/**var cleavePhone = new Cleave('.input-phone', {
		phone: true,
		phoneRegionCode: 'US'
	}); */

	var cleaveCvv = new Cleave('#cvv', {
		numeral: true,
		//numeralThousandsGroupStyle: 'thousand'
	});
	console.log(cleaveCvv);

	$.fn.extend({
		clearForm: function(instance){
			console.log('form clearing........')
			instance.reset();
			instance.refresh();
			console.log(instance.$element)
			
			document.getElementById("validCard").style.display = 'none';
			document.getElementById("notvalidCard").style.display = 'none';
			document.getElementById('shipping-address').style.display = "none";
			document.getElementById("errorAmericanCard").style.display = 'none';

			$('#buttonAddress').prop('disabled', true);
			$('#buttonAddress').css('background-color', '#6c757d');

			$("#cardNumber").val("");
			$("#card_holder_name").val("");
			$("#cvv").val("");
			$("#type").val("");
			$("#inputExpDate").val("");
			$("#email").val("");
			$("#confirm_email").val("");
            $("#address_1").val("");
			$("#address_2").val("");
			$("#city").val("");
			$("#state").val("");
			$("#zip").val("");
			$("#shipping_address_1").val("");
			$("#shipping_address_2").val("");
			$("#shipping_city").val("");
			$("#shipping_state").val("");
			$("#shipping_zip").val("");
			$('input[name="optradio"]').prop('checked', false);
			var $radios = $('input:radio[name=optradio]');
			if($radios.is(':checked') === false) {
				$radios.filter('[value=Same]').prop('checked', true);
			}
		},
		clearCardIcon: function(){
			console.log('Card Icon clearing....')
			amex.addClass('transparent');
			visa.addClass('transparent');
			discover.addClass('transparent');
			mastercard.addClass('transparent');
			document.getElementById("errorAmericanCard").style.display = 'none';

		}
	});
	$("#reset").click(function() {
		var instance = $('#addressForm').parsley(parsleyConfig);
		$.fn.clearForm(instance);
		
	});

	$("#allclear").click(function() {
		var instance = $('#addressForm').parsley(parsleyConfig);
		$.fn.clearForm(instance);
	});



	$("#cardNumber").keyup(function () {
		var maxlimit = 19;
		console.log("Input value: " + this.value.length);
		if (this.value.length == maxlimit) {
			console.log("Input value reach max limit: " + this.value.length);
			$(this).next(':input').focus()
			$("#cvv").focus();
			return false;
		}
		if (this.value.length == 0) {
			document.getElementById("validCard").style.display = 'none';
			document.getElementById("notvalidCard").style.display = 'none';
			document.getElementById("errorAmericanCard").style.display = 'none';
			return false;
		}
		
	});

	$("#cvv").keyup(function () {
		var maxlimit = 3;
		console.log("Input value: " + this.value.length);
		if (this.value.length == maxlimit) {
			console.log("Input value reach max limit: " + this.value.length);
			$(this).next(':input').focus()
			$("#inputExpDate").focus();
			return false;
		}
	});

	$('.optradio').click(function () {
		var radioValue = $("input[name='optradio']:checked").val();
		if (radioValue == 'Same') {
			document.getElementById('shipping-address').style.display = "none";
			$("input[name='shipping_city']").val("");
			$("#shipping_state").val("");
			$("input[name='shipping_zip']").val("");
			$("#shipping_address_1").val("");
			$("#shipping_address_2").val("");
			
		} else {
			document.getElementById('shipping-address').style.display = "block";
		}

	});


	var parsleyConfig = {
		errorsContainer: function (parsleyField) {
			var fieldSet = parsleyField.$element.closest('fieldset');
			if (fieldSet.length > 0) {
				return fieldSet.find('#checkbox-errors');
			}
			return parsleyField;
		}
	};

	$('#buttonAddress').click(function () {
		var formInstance = $('#addressForm').parsley().validate();
		var instance = $('#addressForm').parsley();
		console.log(instance)
		console.log(formInstance)
		console.log(instance.isValid()); // maxlength is 42, so field is valid

		var radioValue = $("input[name='optradio']:checked").val();
		if (radioValue != 'Same') {
			$("input[name='shipping_city']").attr('data-parsley-required', 'true');
			$("#shipping_state").attr('required', 'true');
			$("input[name='shipping_zip']").attr('data-parsley-required', 'true');
		}else{
			$("input[name='shipping_city']").removeAttr('data-parsley-required', 'true');
			$("#shipping_state").removeAttr('required', 'true');
			$("input[name='shipping_zip']").removeAttr('data-parsley-required', 'true');
		}
	
		
			
		if (instance.isValid()) {

			var cardNumber = $("#cardNumber").val();
			cardNumber = cardNumber.replace(/[^0-9]/g, '');
			var card_holder_name = $("#card_holder_name").val();
			var cvv = $("#cvv").val();
			var type = $("#type").val();
			var inputExpDate = $("#inputExpDate").val();
			var email = $("#email").val();
			var address_1 = $("#address_1").val();
			var address_2 = $("#address_2").val();
			var city = $("#city").val();
			var state = $("#state").val();
			var zip = $("#zip").val();

			var radioValue = $("input[name='optradio']:checked").val();
			if (radioValue == 'Same') {
				//shipping-address
				var shipping_address_1 = $("#address_1").val();
				var shipping_address_2 = $("#address_2").val();
				var shipping_city = $("#city").val();
				var shipping_state = $("#state").val();
				var shipping_zip = $("#zip").val();
			} else {
				//shipping-address
				var shipping_address_1 = $("#shipping_address_1").val();
				var shipping_address_2 = $("#shipping_address_2").val();
				var shipping_city = $("#shipping_city").val();
				var shipping_state = $("#shipping_state").val();
				var shipping_zip = $("#shipping_zip").val();
			}

			var unitPrice = $("#unitPrice").val();
			var quantity = $("#quantity").val();
			
			//var unitPrice = $("#unitPrice").val();
			//var quantity = $("#quantity").val();
			//var promocode = $("#promocode").val();
			var unitPrice = getParameterByName('unitPrice');
			var quantity = getParameterByName('quantity');

			var promocode = getParameterByName('promocode');
	
			var product_name = $("#productName").val();
			var product_desc = $("#productDesc").val();
			var shipping_charge = $("#shippingCharge").val();

			var postData = {
				quantity: quantity,
				unitPrice: unitPrice,
				cardNumber: cardNumber,
				cardHolderName: card_holder_name,
				cvv: cvv,
				type: type,
				expiryDate: inputExpDate,
				email: email,
				address1: address_1,
				address2: address_2,
				city: city,
				state: state,
				zip: zip,
				promocode: promocode,
				productName: product_name,
				productDesc: product_desc,
				shippingCharge: shipping_charge,
				shippingAddress1: shipping_address_1,
				shippingAddress2: shipping_address_2,
				shippingCity: shipping_city,
				shippingState: shipping_state,
				shippingZip: shipping_zip,
				optradio: radioValue
			}
			

			$("#loader").show();
			axios.post('/api/makepayment', JSON.stringify(postData))
				.then((response) => {
					console.log(response);
					
					if (response.data.status == '201') {
						instance.reset();
						$.fn.clearForm(instance);
						$.fn.clearCardIcon();
						$('#creditCardStatus').text('Success');
						$('#creditCardResponse').text(response.data.messages.success);
						//document.getElementById("myModal").style.display = 'none';
						$('#creditCardServiceMessage').modal("show");
					} else {
						//document.getElementById("myModal").style.display = 'none';
						$('#creditCardErrorStatus').text('Failed');
						$('#creditCardErrorResponse').text(response.data.messages.success);
						$('#creditCardServiceErrorMessage').modal("show");
					}

					$("#loader").hide();
				}, (error) => {
					console.log(error);
					$("#loader").hide();
					$('#creditCardStatus').text('Failed');
					$('#creditCardResponse').text('Cannot connect to the server. please try again after some time.');
					$('#creditCardServiceMessage').modal("show");
					instance.reset();
					$.fn.clearForm(instance);
					$.fn.clearCardIcon();

				});

		}

	});


	$('.cardNumber').keyup(function () {

		var cardNumber = $("#cardNumber").val();
		cardNumber = cardNumber.replace(/[^0-9]/g, '');

		console.log('Enter CardNumber: ' + cardNumber);
		var card = {
			cardNumber: cardNumber
		};
		
		axios.get('/api/validateCard/' + cardNumber)
				.then((response) => {
					console.log(response.data);
					if (response.data.data == 'VALID') {
						document.getElementById("validCard").style.display = 'block';
						document.getElementById("notvalidCard").style.display = 'none';
						makeButtonEnabled();
					} else {
						makeButtonDisabled();
						document.getElementById("validCard").style.display = 'none';
						document.getElementById("notvalidCard").style.display = 'block';
					}
				}, (error) => {
					console.log(error);

				});


	});


});


function getParameterByName(name, url = window.location.href) {
    name = name.replace(/[\[\]]/g, '\\$&');
    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
}